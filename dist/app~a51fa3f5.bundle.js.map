{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";wYACA,gnGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAyCF,QAtCyB,CACjBC,SAAQ,SAACC,GAAI,oGACZA,EAAI,CAAF,gEAIOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CALjC,EAMnB,EAEME,YAAW,WAAG,iHACJT,EAAS,uCAAEU,OAAOX,IAAiB,0CAD/B,EAEpB,EAEMY,SAAQ,SAACC,GAAY,oGACpBA,EAAWC,eAAe,MAAO,CAAF,gEAItBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CALjC,EAM3B,EAEMG,YAAW,SAACR,GAAI,iHACNP,EAAS,8CAASD,EAAmBQ,IAAE,0CADjC,EAEtB,EAEMS,YAAW,SAACC,GAAO,4HACT,EAAKR,cAAa,uCAAES,QAAO,SAACN,GACxC,IACMO,GADwBP,EAAWQ,MAAQ,KAAKC,cACTC,QAAQ,MAAO,IAGtDC,EADmBN,EAAMI,cACMC,QAAQ,MAAO,IAEpD,OAAiD,IAA1CH,EAAgBK,QAAQD,EACjC,KAAC,0CATsB,EAUzB,gDCvCF,QALqB,CACnBE,KAAM,GAAF,OAAK5B,EAAAA,EAAAA,SAAe,SACxB6B,OAAQ,SAACnB,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,mBAAWU,EAAE,sPCHjD,irOAeA,QAdoB,yBADpB,4FACoB,SADpB,QAMG,EALiB,EAWjB,OAZH,EACoB,OADpB,EACoB,sCAClB,sGACyBoB,MAAMC,EAAAA,MAAkB,OAAjC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,WAA8BzB,GAAE,yFACPoB,MAAMC,EAAAA,OAAoBrB,IAAI,OAAvC,OAARsB,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAanB,YAAU,2CAC/B,+CAZH,6DAYG,EAXiB,mCCSpB,QAXe,CACbqB,SAAU,sCACVC,gBAAiB,6CACjBC,qBAAsB,oDACtBC,sBAAuB,qDACvBC,qBAAsB,oDACtBzC,cAAe,iBACfE,iBAAkB,EAClBC,kBAAmB,6ECDfuC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,eAC/BC,OAAQF,SAASC,cAAc,WAC/BE,KAAMH,SAASC,cAAc,gBAC7BG,QAASJ,SAASC,cAAc,UAGlCI,OAAOC,iBAAiB,cAAc,WACpCT,EAAIU,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BT,EAAIU,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-resto-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurant-data.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestoIdb = {\r\n  async getResto(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async getAllResto() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n\r\n  async putResto(restaurant) {\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n\r\n  async deleteResto(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async searchResto(query) {\r\n    return (await this.getAllResto()).filter((restaurant) => {\r\n      const loweredCaseRestoName = (restaurant.name || '-').toLowerCase();\r\n      const jammedRestoName = loweredCaseRestoName.replace(/\\s/g, '');\r\n\r\n      const loweredCaseQuery = query.toLowerCase();\r\n      const jammedQuery = loweredCaseQuery.replace(/\\s/g, '');\r\n\r\n      return jammedRestoName.indexOf(jammedQuery) !== -1;\r\n    });\r\n  },\r\n};\r\n\r\nexport default FavoriteRestoIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  HOME: `${CONFIG.BASE_URL}/list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}/detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestaurantData {\r\n  static async homePage() {\r\n    const response = await fetch(API_ENDPOINT.HOME);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n}\r\n\r\nexport default RestaurantData;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev',\r\n  BASE_URL_REVIEW: 'https://restaurant-api.dicoding.dev/review',\r\n  BASE_IMAGE_URL_SMALL: 'https://restaurant-api.dicoding.dev/images/small/',\r\n  BASE_IMAGE_URL_MEDIUM: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  BASE_IMAGE_URL_LARGE: 'https://restaurant-api.dicoding.dev/images/large/',\r\n  DATABASE_NAME: 'mangan-apps-db',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurant',\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/main.scss';\nimport '../styles/responsive.css';\nimport './views/customs/hero';\nimport App from './views/app';\nimport swRegister from './utils/swRegister';\n\nconst app = new App({\n  button: document.querySelector('#buttonMenu'),\n  drawer: document.querySelector('#drawer'),\n  hero: document.querySelector('hero-content'),\n  content: document.querySelector('main'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getResto","id","get","getAllResto","getAll","putResto","restaurant","hasOwnProperty","put","deleteResto","searchResto","query","filter","jammedRestoName","name","toLowerCase","replace","jammedQuery","indexOf","HOME","DETAIL","fetch","API_ENDPOINT","response","json","responseJson","restaurants","BASE_URL","BASE_URL_REVIEW","BASE_IMAGE_URL_SMALL","BASE_IMAGE_URL_MEDIUM","BASE_IMAGE_URL_LARGE","app","App","button","document","querySelector","drawer","hero","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}